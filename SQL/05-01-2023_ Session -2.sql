--CREATE TBL_TANSACTION:

CREATE TABLE TBL_TRANSACTION(
AMOUNT NUMBER(15,2) NOT NULL
,DATE_OF_TRANSACTION DATE NOT NULL
,EMPLOYEE_NUMBER NUMBER (4,0) NOT NULL
);

-- CHECK THE DATA AFTER IMPORINTG THE DATA
SELECT
    amount,
    date_of_transaction,
    employee_number
FROM
    tbl_transaction;

-- USING JOINS

SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
JOIN tbl_transaction
ON 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME;
---------------------------------------------------------------------------------
-- TYPES of JOINS :
--INNER JOIN
-- LEFT JOIN
--RIGHT JOIN
--FULL JOIN

-- LEFT JOIN
SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
RIGHT JOIN tbl_transaction
ON 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; -- 1005 rows

-------RIGHT JOIN
SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
RIGHT JOIN tbl_transaction
ON 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; -- 899 rows

-------FULL OUTER JOIN
SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
FULL JOIN tbl_transaction
ON 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; --1006 Rows

-- CARTESIAN JOIN (CROSS JOIN) : Rrecommend NOT TO USE:
-- IT WILL GIVE A PRODUCT DATA FOR EACH AND EVERY RECORDS

SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
CROSS JOIN tbl_transaction
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME;

-- USING NATURAL JOINS:
-- Types : NATURAL JOIN (INNER)
-- NATURAL LEFT JOIN
-- NATURAL RIGHT JOIN
-- NATURAL FULL JOIN
-- It doesn't required the ON Condition and explicit qualifier.
-- It remove the complexity
-- cons : Loos the control of output data
-- USE it where the column names are identical

SELECT EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
NATURAL JOIN tbl_transaction
GROUP BY 
    EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; -- 898 Rows

-- NATURAL LEFT JOIN
SELECT EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
NATURAL LEFT JOIN tbl_transaction
GROUP BY 
    EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; -- 1005 Rows same as left join

-- NATURAL RIGHT JOIN
SELECT EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
NATURAL RIGHT JOIN tbl_transaction
GROUP BY 
EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; -- 1002 rows

-----------------------------------------------------------
--Another way of removing ON condition:

SELECT EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE
LEFT JOIN tbl_transaction
USING (employee_number)
--ON TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; 
----------------------------------------------------------
--OLD NOTATION JOINS (Not to use) :
-- inner join
SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE, tbl_transaction
where 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; 

--RIGHT JOIN

SELECT TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME
    ,SUM(AMOUNT) AS SUM_OF_AMOUNT
FROM TBL_EMPLOYEE, tbl_transaction
where 
    TBL_EMPLOYEE.EMPLOYEE_NUMBER(+) = tbl_transaction.employee_number
GROUP BY 
TBL_EMPLOYEE.EMPLOYEE_NUMBER, EMPLOYEE_FIRST_NAME , EMPLOYEE_LAST_NAME; 

